trigger:
  - develop
pool:
  vmImage: ubuntu-latest

stages:
  - stage: Validate
    jobs:
      - job: Validate
        continueOnError: false
        steps:
          - task: TerraformInstaller@0
            inputs:
              terraformVersion: 'latest'
          - bash: terraform --version
            displayName: Terraform Version
          - task: TerraformTaskV2@2
            displayName: 'terraform init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/azure'
              backendServiceArm: 'spHansRMConnection'
              backendAzureRmResourceGroupName: 'RG-hansf'
              backendAzureRmStorageAccountName: 'hansterraformstate'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'demo.terraform.tfstate'
          - task: TerraformTaskV2@2
            displayName: 'terraform validate'
            inputs:
              provider: 'azurerm'
              command: 'validate'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/azure'
  - stage: Deploy
    dependsOn: Validate
    jobs:
      - job: Deploy
        continueOnError: false
        steps:
          - task: TerraformTaskV2@2
            displayName: 'terraform init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/azure'
              backendServiceArm: 'spHansRMConnection'
              backendAzureRmResourceGroupName: 'RG-hansf'
              backendAzureRmStorageAccountName: 'hansterraformstate'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'demo.terraform.tfstate'
          - bash: ls -lah
            displayName: test
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/azure'
          - task: TerraformTaskV2@2
            displayName: 'terraform plan -auto-approve'
            inputs:
              provider: 'azurerm'
              command: 'plan'
              commandOptions: '-auto-approve'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/azure'
              environmentServiceNameAzureRM: 'spHansRMConnection'